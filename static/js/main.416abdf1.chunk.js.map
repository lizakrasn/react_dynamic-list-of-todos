{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","todos","selectedTodoId","onClick","filterInputValue","onFilterInputChange","selectValue","onSelectValueChange","className","value","name","placeholder","onChange","event","target","map","todo","key","id","classNames","TodoList__item","completed","type","checked","readOnly","title","button","userId","CurrentUser","state","user","this","loadDate","prevProps","props","fetch","then","response","json","setState","data","email","phone","React","Component","App","selectedUserId","todoId","clearUser","filterTodosByTitle","filter","includes","text","status","filterTodosByStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.416abdf1.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  selectedTodoId,\n  onClick,\n  filterInputValue,\n  onFilterInputChange,\n  selectValue,\n  onSelectValueChange,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <input\n      value={filterInputValue}\n      name=\"filterTodo\"\n      placeholder=\"Search Todo\"\n      onChange={event => onFilterInputChange(event.target.value)}\n    />\n\n    <select\n      onChange={event => onSelectValueChange(event.target.value)}\n      value={selectValue}\n    >\n      <option value=\"all\">All</option>\n      <option value=\"completed\">Completed</option>\n      <option value=\"notCompleted\">Not completed</option>\n    </select>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--checked': todo.completed === true,\n              'TodoList__item--unchecked': todo.completed === false,\n            })}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classNames({\n                button: true,\n                'TodoList-user-button': true,\n                'TodoList__user-button--selected': selectedTodoId === todo.id,\n              })}\n              type=\"button\"\n              onClick={() => onClick(todo.userId, todo.id)}\n            >\n              User&nbsp;#\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  filterInputValue: PropTypes.string.isRequired,\n  onFilterInputChange: PropTypes.func.isRequired,\n  selectValue: PropTypes.string.isRequired,\n  onSelectValueChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport Proptypes from 'prop-types';\nimport { getUserById } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadDate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadDate();\n    }\n  }\n\n  loadDate() {\n    getUserById(this.props.userId)\n      .then((user) => {\n        this.setState({ user: user.data });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (user === null) {\n      return 'Loading...';\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {this.props.userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.props.onClick}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: Proptypes.number.isRequired,\n  onClick: Proptypes.func.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com/todos`;\nconst API_URL_USERS = `https://mate-api.herokuapp.com/users/`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport function getUserById(userId) {\n  return fetch(API_URL_USERS + userId)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAll } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    selectedTodoId: 0,\n    filterInputValue: '',\n    selectValue: 'all',\n  };\n\n  componentDidMount() {\n    getAll()\n      .then((todos) => {\n        this.setState({ todos: todos.data });\n      });\n  }\n\n  selectedUserId = (userId, todoId) => {\n    this.setState({\n      selectedUserId: userId,\n      selectedTodoId: todoId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      selectedTodoId: 0,\n    });\n  }\n\n  filterTodosByTitle = (todos) => {\n    if (this.state.filterInputValue === '') {\n      return todos;\n    }\n\n    return todos.filter((todo) => {\n      if (!todo.title) {\n        return false;\n      }\n\n      return todo.title.includes(this.state.filterInputValue);\n    });\n  }\n\n  onFilterInputChange = (text) => {\n    this.setState({\n      filterInputValue: text,\n    });\n  }\n\n  onSelectValueChange = (status) => {\n    this.setState({\n      selectValue: status,\n    });\n  }\n\n  filterTodosByStatus = (todos) => {\n    if (this.state.selectValue === 'completed') {\n      return todos.filter(todo => todo.completed === true);\n    }\n\n    if (this.state.selectValue === 'notCompleted') {\n      return todos.filter(todo => todo.completed === false);\n    }\n\n    return todos;\n  }\n\n  render() {\n    const { todos,\n      selectedUserId,\n      selectedTodoId,\n      filterInputValue,\n      selectValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={this.filterTodosByTitle(this.filterTodosByStatus(todos))}\n            selectedTodoId={selectedTodoId}\n            filterInputValue={filterInputValue}\n            onClick={this.selectedUserId}\n            onFilterInputChange={this.onFilterInputChange}\n            selectValue={selectValue}\n            onSelectValueChange={this.onSelectValueChange}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClick={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}